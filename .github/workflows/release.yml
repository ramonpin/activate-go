name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    permissions:
      contents: write

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: Build artifact name
        id: artifact_name
        run: |
          ARTIFACT_NAME="activate-go-${{ env.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            ARTIFACT_NAME="${ARTIFACT_NAME}.exe"
          fi
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
        shell: bash

      - name: Build executable
        run: go build -v -o ${{ env.ARTIFACT_NAME }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        shell: bash

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: ${{ env.ARTIFACT_NAME }}
